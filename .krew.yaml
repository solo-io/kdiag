apiVersion: krew.googlecontainertools.github.com/v1alpha2
kind: Plugin
metadata:
  name: diag
spec:
  version: {{ .TagName }}
  homepage: https://github.com/solo-io/kdiag
  platforms:
  - {{ addURIAndSha "https://github.com/solo-io/kdiag/releases/download/{{ .TagName }}/kubectl-diag_{{.TagName}}_darwin_amd64.tar.gz" .TagName }}
    bin: kubectl-diag
    files:
    - from: kubectl-diag
      to: kubectl-diag
    - from: LICENSE
      to: .
    selector:
      matchLabels:
        os: darwin
        arch: amd64
  - {{ addURIAndSha "https://github.com/solo-io/kdiag/releases/download/{{ .TagName }}/kubectl-diag_{{.TagName}}_darwin_arm64.tar.gz" .TagName }}
    bin: kubectl-diag
    files:
    - from: kubectl-diag
      to: kubectl-diag
    - from: LICENSE
      to: .
    selector:
      matchLabels:
        os: darwin
        arch: arm64
  - {{ addURIAndSha "https://github.com/solo-io/kdiag/releases/download/{{ .TagName }}/kubectl-diag_{{.TagName}}_linux_amd64.tar.gz" .TagName }}
    bin: kubectl-diag
    files:
    - from: kubectl-diag
      to: .
    - from: LICENSE
      to: .
    selector:
      matchLabels:
        os: linux
        arch: amd64
  - {{ addURIAndSha "https://github.com/solo-io/kdiag/releases/download/{{ .TagName }}/kubectl-diag_{{.TagName}}_windows_amd64.tar.gz" .TagName }}
    bin: kubectl-diag.exe
    files:
    - from: kubectl-diag.exe
      to: kubectl-diag.exe
    - from: LICENSE
      to: .
    selector:
      matchLabels:
        os: windows
        arch: amd64
  shortDescription: Debug/Diagnostics tools for kubernetes backend systems developers.
  caveats: |
    This uses high privilege ephemeral containers, and not suited for production.
  description: |
        Systems that span multiple micro-services (istio for example), can be hard to debug.
        This plugin has a set of tools to assist you with such debugging:
        - Redirecting traffic from a pod to a laptop, so you can run a server on your laptop and redirect client
          traffic from the cluster to it (i.e. run istiod with your changes locally, and have envoy from the cluster connect to it)
        - Viewing logs from multiple pods at the same time (i.e. run a curl command and see logs form all the bookinfo pods as the request travels through them)
        - Ability to exec into distroless/scratch containers. To let you can exec to your pods even if they don't have a shell binary in them (i.e. deployments in staging environments).
